#The Hamming distance between two strings having the same length is the minimum number of symbol substitutions
# required to transform one string into the other. If the strings are given by s1 and s2, then we write the Hamming
# distance between them as dH(s1,s2).

fhandle = open(r'C:\Users\kianmun.SWISING\Desktop\rosalind_hamm.txt')
file = fhandle.read().splitlines()

seq1 = file[0]
seq2 = file[1]
mismatch =[]
def sequence_compare(sequence_a, sequence_b):
    len_a = len(sequence_a)
    len_b = len(sequence_b)
#    mismatch = []
    for pos in range(0,max(len_a, len_b)):
#comparing position by position a[pos] vs b[pos]
        if sequence_a[pos] != sequence_b[pos]:
            mismatch.append(1)
        else:
            mismatch.append(0)
    return sum(mismatch)

print('Hamming distance is: ', (sequence_compare(seq1,seq2)))

#printing the mismatch positions
print('Mismatch positions are:', '\n', [i for i, x in enumerate(mismatch) if x == 1])
